#!/bin/env python3

import sys

# Se vuoi leggere/scrivere da file decommenta qua
fin = open("input1.txt", "r")  # File di input fornito dalla piattaforma
fout = open("output.txt", "w")  # Output da inviare alla piattaforma

# Se vuoi leggere/scrivere da linea di comando decommenta qua
#fin = sys.stdin  # input fornito dalla piattaforma
#fout = sys.stdout  # Output da inviare alla piattaforma

def check_neighbors(row, col, memory, n, m):
    symbol = {"." : 0, "+" : 0, "*" : 0}
    if (row-1 >= 0) and (col-1 >= 0):
        symbol[memory[row-1][col-1]] += 1
    if row-1 >= 0:
        symbol[memory[row-1][col]] += 1
    if (row-1 >= 0) and (col+1 < m):
        symbol[memory[row-1][col+1]] += 1
    if col-1 >= 0:
        symbol[memory[row][col-1]] += 1
    if col +1 < m:
        symbol[memory[row][col+1]] += 1
    if (row+1 < n) and (col -1 >= 0):
        symbol[memory[row+1][col-1]] += 1
    if row+1 < n:
        symbol[memory[row+1][col]] += 1
    if (row+1 < n) and (col +1 < m):
        symbol[memory[row+1][col+1]] += 1
    
    current_symbol = memory[row][col]    

    if current_symbol == ".":
        if symbol["*"] + symbol["+"] > 4:
                return "+"
                #memory[row][col] = "+"
            
    if current_symbol == "+":
        if symbol["*"] + symbol["+"] > 4:
                return "*"
                #memory[row][col] = "*"
        if symbol["*"] + symbol["+"] < 4:
                return "."
                #memory[row][col] = "."
    
    if current_symbol == "*":
        if symbol["*"] + symbol["+"] > 4:
                return "+"
                #memory[row][col] = "+"
        if symbol["*"] + symbol["+"] < 4:
                return "."
                #memory[row][col] = "."  
    return current_symbol 
        




def malware_check(n, m, k, memory):
    for i in range(0, k):
        new_memory = []
        for r in range(0, n):
            new_row = [] 
            for c in range(0, m):
                new_row.append(check_neighbors(r,c,memory, n, m))
            new_memory.append(new_row)
        memory = new_memory
    return memory


n, m, k = fin.readline().strip().split(" ")
n = int(n)
m = int(m)
k = int(k)

memory = []

for _ in range(n):
    line = fin.readline().strip()
    row = []
    for i in line:
        row.append(i)
    memory.append(row)

print(malware_check(n, m, k, memory), file=fout)

